// 架构见图片 IslandArchitecture.png
// 优点：
// 1. 性能，缩减了要发送给客户端的脚本代码量，比起交互性组件需要的代码（重新创建虚拟 DOM），岛屿架构所需的代码更加少
// 2. SEO, 由于所有静态内容都是由服务端进行渲染的, 页面更加适合 SEO
// 3. 优先显示重要的内容, 关键的内容优先显示, 交互性的功能次一级显示
// 4. 可访问性, 使用标准的 HTML 内容, 提高可访问性
// 5. 基于组件的,包括所有基于组件式的优点, 比如可重用性和可维护性

// 缺点
// 1. 概念较新, 各方面的生态支持少, 如果需要进行迁移, 那么可选的技术方案也比较少,利用特定的框架如 Astro , 或者自己实现
// 2. 这个架构不适用于高度交互性的应用, 比如社交媒体应用, 需要的成千上百个 Islands
